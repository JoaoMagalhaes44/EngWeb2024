var http = require('http');
var fs = require('fs');
var url = require('url');
var axios = require('axios');


function geraPagFilmes(dados){
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Filmes americanos</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                    <h1>Filmes americanos</h1>
                    <h5>Generated by ENGWEB24: João Magalhães [<a href='/'> Voltar à página inicial </a>]</h5>
                    </header>
                    
                    <div class="w3-container">
                        <ul> `
                    dados.forEach(filme => {
                            pagHTML += `
                                <li> 
                                    <a href='/Filmes/${filme._id}'>${filme.title}</a>
                                </li>
                            `
                        });
                     pagHTML +=  
                        `</ul>
                    </div>
                </div>
            </body>
        </html>
    `;
    return pagHTML;
}

function geraFilme(filme) {
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Filme ${filme._id}</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                        <h1>Filme ${filme._id}</h1>
                    </header>
                    <div class="w3-responsive">
                        <table class="w3-table-all">
                            <tr>
                                <th>ID</th>
                                <th>NOME</th>
                                <th>ANO</th>
                                <th>ATORES</th>
                                <th>GENERO</th>
                            </tr>
                            <tr> 
                                <td>${filme._id}</td>
                                <td>${filme.title}</td>
                                <td>${filme.year}</td>
                                <td>${filme.cast}</td>
                                <td>${filme.genres}</td>
                            </tr>
                        </table>
                    </div>
                    <footer class="w3-container w3-blue">
                        <h5>Generated by ENGWEB24: João Magalhães [<a href='/Filmes'> Voltar à pagina dos filmes </a>]</h5>
                    </footer>
                </div>
            </body>
        </html>`;
    return pagHTML;
}


function geraPagAtores(dados){
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Atores</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                    <h1>Atores dos filmes</h1>
                    <h5>Generated by ENGWEB24: João Magalhães [<a href='/'> Voltar à página inicial </a>]</h5>
                    </header>
                    
                    <div class="w3-container">
                        <ul> `
                    dados.forEach(ator => {
                            pagHTML += `
                                <li> 
                                    <a href = '/Atores/${ator.id}'>${ator.ator}</a>
                                </li>
                            `
                        });
                     pagHTML +=  
                        `</ul>
                    </div>
                    </div>
            </body>
        </html>
    `;
    return pagHTML;
}

function geraAtor(ator) {
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Ator ${ator.id}</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                        <h1>Ator ${ator.id}</h1>
                    </header>
                    <div class="w3-container">
                        <ul class="w3-ul w3-center">
                            <li>${ator.ator}</li>
                        </ul>
                    </div>

                    <footer class="w3-container w3-blue">
                        <h5>Generated by ENGWEB24: João Magalhães [<a href='/Atores'> Voltar à pagina dos atores </a>]</h5>
                    </footer>
                </div>
            </body>
        </html>`;
    return pagHTML;
}

function geraPagGeneros(dados){
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Generos dos filmes</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                    <h1>Generos dos filmes</h1>
                    </header>
                    
                    <div class="w3-container">
                        <ul> `
                    dados.forEach(genero => {
                            pagHTML += `
                                <li> 
                                    <a href = '/Generos/${genero}'>${genero}</a>
                                </li>
                            `
                        });
                    pagHTML +=  
                        `</ul>
                    </div>
                    <footer class="w3-container w3-blue">
                        <h5>Generated by ENGWEB24: João Magalhães [<a href='/'> Voltar à pagina inicial </a>]</h5>
                    </footer>
                    </div>
            </body>
        </html>
    `;
    return pagHTML;
}
function geraGeneroFilmes(genero, filmes) {
    pagHTML = `<!DOCTYPE html> 
        <html>
            <head>
                <meta charset="utf-8">
                <title>Filmes de genero ${genero}</title>
                <link rel="stylesheet" href="/w3.css">
            </head>
            <body>
                <div class="w3-card-4">
        
                    <header class="w3-container w3-blue">
                        <h1>Filmes de genero ${genero}</h1>
                        <h5>Generated by ENGWEB24: João Magalhães [<a href='/Generos'> Voltar à página inicial </a>]</h5>
                    </header>
                    <div class="w3-container">
                        <ul> `
                        filmes.forEach(filme => {
                            if(filme.genres == genero)
                                pagHTML += `
                                    <li> 
                                        <a href='/Filmes/${filme._id}'>${filme.title}</a>
                                    </li>
                                `
                        });
                pagHTML += `
                        </ul>
                    </div>
                </div>
            </body>
        </html>`;
    return pagHTML;
}

http.createServer(function (req, res) {
    var q = url.parse(req.url, true);
    var regF = /^\/Filmes\/[A-Za-z\d]+$/
    var regA = /^\/Atores\/[\d]+$/
    var regG = /^\/Generos\/\w+$/

    if (q.pathname == "/") {
        fs.readFile('principal.html', function (erro, dados) {
            res.writeHead(200, { 'Content-Type': 'text/html' });
            res.write(dados);
            res.end();
        });
    } else if (q.pathname == '/Filmes') {
        axios.get('http://localhost:3000/Filmes')
            .then(resp => {
                pagHTML = geraPagFilmes(resp.data);
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(pagHTML);  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (regF.test(q.pathname)) {
        filme_id = q.pathname.split("/")[2]
        axios.get('http://localhost:3000/Filmes?_id=' + filme_id)
            .then(resp => {
                dados = resp.data[0]; // resp é um array com um elemento
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(geraFilme(dados));  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (q.pathname == '/Atores') {
        axios.get('http://localhost:3000/Atores')
            .then(resp => {
                pagHTML = geraPagAtores(resp.data);
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(pagHTML);  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (regA.test(q.pathname)) {
        ator_id = q.pathname.split("/")[2]
        axios.get('http://localhost:3000/Atores?id=' + ator_id)
            .then(resp => {
                dados = resp.data[0]; // resp é um array com um elemento
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(geraAtor(dados));  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (q.pathname == '/Generos') {
        axios.get('http://localhost:3000/Generos')
            .then(resp => {
                pagHTML = geraPagGeneros(resp.data);
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(pagHTML);  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (regG.test(q.pathname)) {
        genero = q.pathname.split("/")[2]
        axios.get('http://localhost:3000/Filmes')
            .then(resp => {
                dados = resp.data;
                res.writeHead(200, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write(geraGeneroFilmes(genero, dados));  // Corrigido para escrever a página HTML gerada
                res.end();
            })
            .catch(function (erro) {  // Corrigido o erro de sintaxe
                res.writeHead(500, { 'Content-Type': 'text/html' });  // Corrigido o tipo de conteúdo
                res.write("<pre>" + erro + "</pre>");
                res.end();
            });
    } else if (q.pathname == '/w3.css') {
        fs.readFile('w3.css', function (erro, dados) {
            res.writeHead(200, { 'Content-Type': 'text/css' });
            res.write(dados);
            res.end();
        });
    } else {
        res.writeHead(400, { 'Content-Type': 'text/html; charset=utf-8' });
        res.write('<p>Erro: pedido não suportado.</p>');
        res.write('<pre>' + q.pathname + '</pre>');
        res.end();
    }
    console.log(q.pathname);
}).listen(7777);
